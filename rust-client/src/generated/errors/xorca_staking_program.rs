//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum XorcaStakingProgramError {
    /// 6000 - Unknown instruction discriminator
    #[error("Unknown instruction discriminator")]
    UnknownInstructionDiscriminator = 0x1770,
    /// 6001 - Incorrect program id
    #[error("Incorrect program id")]
    IncorrectProgramId = 0x1771,
    /// 6002 - Invalid account role
    #[error("Invalid account role")]
    InvalidAccountRole = 0x1772,
    /// 6003 - Not enough account keys
    #[error("Not enough account keys")]
    NotEnoughAccountKeys = 0x1773,
    /// 6004 - Incorrect owner
    #[error("Incorrect owner")]
    IncorrectOwner = 0x1774,
    /// 6005 - Invalid seeds
    #[error("Invalid seeds")]
    InvalidSeeds = 0x1775,
    /// 6006 - Invalid account address
    #[error("Invalid account address")]
    IncorrectAccountAddress = 0x1776,
    /// 6007 - Invalid account data
    #[error("Invalid account data")]
    InvalidAccountData = 0x1777,
    /// 6008 - Arithmetic error
    #[error("Arithmetic error")]
    ArithmeticError = 0x1778,
    /// 6009 - Insufficient funds error
    #[error("Insufficient funds error")]
    InsufficientFunds = 0x1779,
    /// 6010 - State account already initialized
    #[error("State account already initialized")]
    StateAccountAlreadyInitialized = 0x177A,
    /// 6011 - Cool down period still active
    #[error("Cool down period still active")]
    CoolDownPeriodStillActive = 0x177B,
    /// 6012 - Event serialization failed
    #[error("Event serialization failed")]
    EmitEventError = 0x177C,
    /// 6013 - Invalid cooldown period: must be non-negative
    #[error("Invalid cooldown period: must be non-negative")]
    InvalidCoolDownPeriod = 0x177D,
    /// 6014 - Stake amount too small to mint any xORCA
    #[error("Stake amount too small to mint any xORCA")]
    InsufficientStakeAmount = 0x177E,
    /// 6015 - Unstake amount too small to receive any ORCA
    #[error("Unstake amount too small to receive any ORCA")]
    InsufficientUnstakeAmount = 0x177F,
    /// 6016 - Insufficient escrow to cover withdraw amount
    #[error("Insufficient escrow to cover withdraw amount")]
    InsufficientEscrow = 0x1780,
    /// 6017 - Cooldown timestamp overflowed
    #[error("Cooldown timestamp overflowed")]
    CoolDownOverflow = 0x1781,
    /// 6018 - Insufficient vault backing (vault < escrow)
    #[error("Insufficient vault backing (vault < escrow)")]
    InsufficientVaultBacking = 0x1782,
}

impl solana_program::program_error::PrintProgramError for XorcaStakingProgramError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}

impl<T> solana_program::decode_error::DecodeError<T> for XorcaStakingProgramError {
    fn type_of() -> &'static str {
        "XorcaStakingProgramError"
    }
}
