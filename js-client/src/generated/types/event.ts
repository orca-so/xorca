/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';

export type Event =
  | {
      __kind: 'Stake';
      orcaStakeAmount: bigint;
      vaultOrcaAmount: bigint;
      vaultEscrowedOrcaAmount: bigint;
      xorcaMintSupply: bigint;
      xorcaToMint: bigint;
    }
  | {
      __kind: 'Unstake';
      xorcaUnstakeAmount: bigint;
      vaultOrcaAmount: bigint;
      vaultEscrowedOrcaAmount: bigint;
      xorcaMintSupply: bigint;
      withdrawableOrcaAmount: bigint;
      coolDownPeriodS: bigint;
      withdrawIndex: number;
    }
  | {
      __kind: 'Withdraw';
      vaultEscrowedOrcaAmount: bigint;
      withdrawableOrcaAmount: bigint;
      coolDownPeriodS: bigint;
      withdrawIndex: number;
    };

export type EventArgs =
  | {
      __kind: 'Stake';
      orcaStakeAmount: number | bigint;
      vaultOrcaAmount: number | bigint;
      vaultEscrowedOrcaAmount: number | bigint;
      xorcaMintSupply: number | bigint;
      xorcaToMint: number | bigint;
    }
  | {
      __kind: 'Unstake';
      xorcaUnstakeAmount: number | bigint;
      vaultOrcaAmount: number | bigint;
      vaultEscrowedOrcaAmount: number | bigint;
      xorcaMintSupply: number | bigint;
      withdrawableOrcaAmount: number | bigint;
      coolDownPeriodS: number | bigint;
      withdrawIndex: number;
    }
  | {
      __kind: 'Withdraw';
      vaultEscrowedOrcaAmount: number | bigint;
      withdrawableOrcaAmount: number | bigint;
      coolDownPeriodS: number | bigint;
      withdrawIndex: number;
    };

export function getEventEncoder(): Encoder<EventArgs> {
  return getDiscriminatedUnionEncoder([
    [
      'Stake',
      getStructEncoder([
        ['orcaStakeAmount', getU64Encoder()],
        ['vaultOrcaAmount', getU64Encoder()],
        ['vaultEscrowedOrcaAmount', getU64Encoder()],
        ['xorcaMintSupply', getU64Encoder()],
        ['xorcaToMint', getU64Encoder()],
      ]),
    ],
    [
      'Unstake',
      getStructEncoder([
        ['xorcaUnstakeAmount', getU64Encoder()],
        ['vaultOrcaAmount', getU64Encoder()],
        ['vaultEscrowedOrcaAmount', getU64Encoder()],
        ['xorcaMintSupply', getU64Encoder()],
        ['withdrawableOrcaAmount', getU64Encoder()],
        ['coolDownPeriodS', getI64Encoder()],
        ['withdrawIndex', getU8Encoder()],
      ]),
    ],
    [
      'Withdraw',
      getStructEncoder([
        ['vaultEscrowedOrcaAmount', getU64Encoder()],
        ['withdrawableOrcaAmount', getU64Encoder()],
        ['coolDownPeriodS', getI64Encoder()],
        ['withdrawIndex', getU8Encoder()],
      ]),
    ],
  ]);
}

export function getEventDecoder(): Decoder<Event> {
  return getDiscriminatedUnionDecoder([
    [
      'Stake',
      getStructDecoder([
        ['orcaStakeAmount', getU64Decoder()],
        ['vaultOrcaAmount', getU64Decoder()],
        ['vaultEscrowedOrcaAmount', getU64Decoder()],
        ['xorcaMintSupply', getU64Decoder()],
        ['xorcaToMint', getU64Decoder()],
      ]),
    ],
    [
      'Unstake',
      getStructDecoder([
        ['xorcaUnstakeAmount', getU64Decoder()],
        ['vaultOrcaAmount', getU64Decoder()],
        ['vaultEscrowedOrcaAmount', getU64Decoder()],
        ['xorcaMintSupply', getU64Decoder()],
        ['withdrawableOrcaAmount', getU64Decoder()],
        ['coolDownPeriodS', getI64Decoder()],
        ['withdrawIndex', getU8Decoder()],
      ]),
    ],
    [
      'Withdraw',
      getStructDecoder([
        ['vaultEscrowedOrcaAmount', getU64Decoder()],
        ['withdrawableOrcaAmount', getU64Decoder()],
        ['coolDownPeriodS', getI64Decoder()],
        ['withdrawIndex', getU8Decoder()],
      ]),
    ],
  ]);
}

export function getEventCodec(): Codec<EventArgs, Event> {
  return combineCodec(getEventEncoder(), getEventDecoder());
}

// Data Enum Helpers.
export function event(
  kind: 'Stake',
  data: GetDiscriminatedUnionVariantContent<EventArgs, '__kind', 'Stake'>
): GetDiscriminatedUnionVariant<EventArgs, '__kind', 'Stake'>;
export function event(
  kind: 'Unstake',
  data: GetDiscriminatedUnionVariantContent<EventArgs, '__kind', 'Unstake'>
): GetDiscriminatedUnionVariant<EventArgs, '__kind', 'Unstake'>;
export function event(
  kind: 'Withdraw',
  data: GetDiscriminatedUnionVariantContent<EventArgs, '__kind', 'Withdraw'>
): GetDiscriminatedUnionVariant<EventArgs, '__kind', 'Withdraw'>;
export function event<K extends EventArgs['__kind'], Data>(kind: K, data?: Data) {
  return Array.isArray(data) ? { __kind: kind, fields: data } : { __kind: kind, ...(data ?? {}) };
}

export function isEvent<K extends Event['__kind']>(
  kind: K,
  value: Event
): value is Event & { __kind: K } {
  return value.__kind === kind;
}
