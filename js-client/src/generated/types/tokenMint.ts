/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type TokenMint = {
  mintAuthorityFlag: number;
  mintAuthority: Address;
  supply: bigint;
  decimals: number;
  isInitialized: boolean;
  freezeAuthorityFlag: number;
  freezeAuthority: Address;
};

export type TokenMintArgs = {
  mintAuthorityFlag: number;
  mintAuthority: Address;
  supply: number | bigint;
  decimals: number;
  isInitialized: boolean;
  freezeAuthorityFlag: number;
  freezeAuthority: Address;
};

export function getTokenMintEncoder(): FixedSizeEncoder<TokenMintArgs> {
  return getStructEncoder([
    ['mintAuthorityFlag', getU32Encoder()],
    ['mintAuthority', getAddressEncoder()],
    ['supply', getU64Encoder()],
    ['decimals', getU8Encoder()],
    ['isInitialized', getBooleanEncoder()],
    ['freezeAuthorityFlag', getU32Encoder()],
    ['freezeAuthority', getAddressEncoder()],
  ]);
}

export function getTokenMintDecoder(): FixedSizeDecoder<TokenMint> {
  return getStructDecoder([
    ['mintAuthorityFlag', getU32Decoder()],
    ['mintAuthority', getAddressDecoder()],
    ['supply', getU64Decoder()],
    ['decimals', getU8Decoder()],
    ['isInitialized', getBooleanDecoder()],
    ['freezeAuthorityFlag', getU32Decoder()],
    ['freezeAuthority', getAddressDecoder()],
  ]);
}

export function getTokenMintCodec(): FixedSizeCodec<TokenMintArgs, TokenMint> {
  return combineCodec(getTokenMintEncoder(), getTokenMintDecoder());
}
